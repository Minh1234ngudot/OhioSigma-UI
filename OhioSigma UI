--!strict
local Carfrost = {}
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

local tabContents = {}
local tabCount = 0
local tabBar: Frame = nil

-- H√†m kh·ªüi t·∫°o m·ªõi (b·∫Øt bu·ªôc ph·∫£i c√≥)
function Carfrost.new()
    local self = setmetatable({}, { __index = Carfrost })
    self._mainFrame = nil
    return self
end

function Carfrost:CreateWindow(config: { Name: string, KeySystem: boolean?, KeySettings: { Title: string, SaveKey: boolean, Key: { string }, linkkey: string }? })
    -- Ki·ªÉm tra an to√†n
    if not self or typeof(self) ~= "table" then
        error("Carfrost must be instantiated with Carfrost.new()", 2)
    end

    -- KeySystem x·ª≠ l√Ω tr∆∞·ªõc GUI
    if config.KeySystem then
        local savedKey = nil
        if config.KeySettings.SaveKey and readfile then
            pcall(function()
                savedKey = readfile("carfrost_key.txt")
            end)
        end

        if not (savedKey and table.find(config.KeySettings.Key, savedKey)) then
            local keyGui = Instance.new("ScreenGui")
            keyGui.Name = "KeySystem"
            keyGui.Parent = player:WaitForChild("PlayerGui")

            local frame = Instance.new("Frame", keyGui)
            frame.Size = UDim2.new(0, 300, 0, 170)
            frame.Position = UDim2.new(0.5, -150, 0.5, -85)
            frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

            local title = Instance.new("TextLabel", frame)
            title.Size = UDim2.new(1, 0, 0, 30)
            title.Position = UDim2.new(0, 0, 0, 0)
            title.Text = config.KeySettings.Title or "Key Required"
            title.Font = Enum.Font.GothamBold
            title.TextSize = 20
            title.TextColor3 = Color3.new(1, 1, 1)
            title.BackgroundTransparency = 1

            local textbox = Instance.new("TextBox", frame)
            textbox.PlaceholderText = "Enter Key Here..."
            textbox.Size = UDim2.new(0.9, 0, 0, 30)
            textbox.Position = UDim2.new(0.05, 0, 0, 40)
            textbox.Text = ""
            textbox.TextColor3 = Color3.new(1, 1, 1)
            textbox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            textbox.ClearTextOnFocus = false
            textbox.Font = Enum.Font.Gotham
            textbox.TextSize = 16
            Instance.new("UICorner", textbox).CornerRadius = UDim.new(0, 6)

            local status = Instance.new("TextLabel", frame)
            status.Size = UDim2.new(1, 0, 0, 20)
            status.Position = UDim2.new(0, 0, 0, 80)
            status.BackgroundTransparency = 1
            status.TextColor3 = Color3.fromRGB(255, 0, 0)
            status.Font = Enum.Font.Gotham
            status.TextSize = 14
            status.Text = ""

            local submit = Instance.new("TextButton", frame)
            submit.Size = UDim2.new(0.55, 0, 0, 30)
            submit.Position = UDim2.new(0.05, 0, 0, 110)
            submit.Text = "Submit Key"
            submit.Font = Enum.Font.GothamBlack
            submit.TextSize = 16
            submit.TextColor3 = Color3.new(1, 1, 1)
            submit.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            Instance.new("UICorner", submit).CornerRadius = UDim.new(0, 10)

            local submitGrad = Instance.new("UIGradient", submit)
            submitGrad.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
            }
            submitGrad.Rotation = 90

            task.spawn(function()
                while submit and submitGrad and submitGrad.Parent do
                    for i = 0, 360, 2 do
                        submitGrad.Rotation = i
                        task.wait(0.02)
                    end
                end
            end)

            submit.MouseButton1Click:Connect(function()
                local userInput = textbox.Text
                if table.find(config.KeySettings.Key, userInput) then
                    if config.KeySettings.SaveKey and writefile then
                        pcall(function()
                            writefile("carfrost_key.txt", userInput)
                        end)
                    end
                    keyGui:Destroy()
                else
                    status.Text = "Invalid Key!"
                end
            end)

            local getKey = Instance.new("TextButton", frame)
            getKey.Size = UDim2.new(0.35, 0, 0, 30)
            getKey.Position = UDim2.new(0.6, 0, 0, 110)
            getKey.Text = "Get Key üîó"
            getKey.Font = Enum.Font.GothamBlack
            getKey.TextSize = 14
            getKey.TextColor3 = Color3.new(1, 1, 1)
            getKey.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            Instance.new("UICorner", getKey).CornerRadius = UDim.new(0, 10)

            local getKeyGrad = Instance.new("UIGradient", getKey)
            getKeyGrad.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
            }
            getKeyGrad.Rotation = 90

            task.spawn(function()
                while getKey and getKeyGrad and getKeyGrad.Parent do
                    for i = 0, 360, 2 do
                        getKeyGrad.Rotation = i
                        task.wait(0.02)
                    end
                end
            end)

            getKey.MouseButton1Click:Connect(function()
                if config.KeySettings.linkkey then
                    if setclipboard then setclipboard(config.KeySettings.linkkey) end
                    game:GetService("StarterGui"):SetCore("SendNotification", {
                        Title = "Key Link Copied!",
                        Text = "Paste into your browser.",
                        Duration = 4
                    })
                end
            end)

            repeat task.wait() until not keyGui or not keyGui.Parent
            if not keyGui or not keyGui.Parent then return end
        end
    end

    -- Main GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = config.Name or "Carfrost_Hub"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 450, 0, 300)
    frame.Position = UDim2.new(0.5, -225, 0.5, -150)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    frame.Parent = screenGui

    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)
    Instance.new("UIStroke", frame).Thickness = 2
    frame.UIStroke.Color = Color3.fromRGB(0,170,255)
    frame.UIStroke.Transparency = 0.2
    Instance.new("UIGradient", frame).Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 35)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
    }

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundTransparency = 1
    title.Text = config.Name or "Carfrost Hub"
    title.TextColor3 = Color3.fromRGB(0, 170, 255)
    title.Font = Enum.Font.GothamSemibold
    title.TextSize = 28
    title.Position = UDim2.new(0, 0, 0, 0)
    title.ZIndex = 2

    local tabBarContainer = Instance.new("Frame", frame)
    tabBarContainer.Size = UDim2.new(1, 0, 0, 30)
    tabBarContainer.Position = UDim2.new(0, 0, 0, 40)
    tabBarContainer.BackgroundTransparency = 1
    tabBarContainer.ZIndex = 2

    local leftArrow = Instance.new("TextButton", tabBarContainer)
    leftArrow.Size = UDim2.new(0, 25, 1, 0)
    leftArrow.Position = UDim2.new(0, 0, 0, 0)
    leftArrow.Text = "<"
    leftArrow.Font = Enum.Font.GothamBold
    leftArrow.TextSize = 20
    leftArrow.TextColor3 = Color3.new(1, 1, 1)
    leftArrow.BackgroundTransparency = 1

    tabBar = Instance.new("ScrollingFrame", tabBarContainer)
    tabBar.Name = "TabScrollArea"
    tabBar.Size = UDim2.new(1, -50, 1, 0)
    tabBar.Position = UDim2.new(0, 25, 0, 0)
    tabBar.BackgroundTransparency = 1
    tabBar.BorderSizePixel = 0
    tabBar.ScrollBarThickness = 0
    tabBar.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabBar.ScrollingDirection = Enum.ScrollingDirection.X

    local tabLayout = Instance.new("UIListLayout", tabBar)
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabLayout.Padding = UDim.new(0, 5)

    tabLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tabBar.CanvasSize = UDim2.new(0, tabLayout.AbsoluteContentSize.X, 0, 0)
    end)

    local rightArrow = Instance.new("TextButton", tabBarContainer)
    rightArrow.Size = UDim2.new(0, 25, 1, 0)
    rightArrow.Position = UDim2.new(1, -25, 0, 0)
    rightArrow.Text = ">"
    rightArrow.Font = Enum.Font.GothamBold
    rightArrow.TextSize = 20
    rightArrow.TextColor3 = Color3.new(1, 1, 1)
    rightArrow.BackgroundTransparency = 1

    leftArrow.MouseButton1Click:Connect(function()
        tabBar.CanvasPosition = Vector2.new(math.max(0, tabBar.CanvasPosition.X - 80), 0)
    end)
    rightArrow.MouseButton1Click:Connect(function()
        tabBar.CanvasPosition = Vector2.new(tabBar.CanvasPosition.X + 80, 0)
    end)

    local separator = Instance.new("Frame", frame)
    separator.Size = UDim2.new(1, 0, 0, 2)
    separator.Position = UDim2.new(0, 0, 0, 75)
    separator.BackgroundColor3 = Color3.new(1, 1, 1)
    separator.BorderSizePixel = 0
    separator.ZIndex = 2

    self._mainFrame = frame
    return self
end

function Carfrost:CreateTab(name: string): ScrollingFrame
    assert(self._mainFrame, "You must call CreateWindow first")
    tabCount += 1
    local tabOrder = tabCount

    local tabButton = Instance.new("TextButton", tabBar)
    tabButton.Size = UDim2.new(0, 80, 0, 28)
    tabButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    tabButton.BorderSizePixel = 0
    tabButton.TextTransparency = 1
    tabButton.AutoButtonColor = true
    tabButton.Active = true
    tabButton.ZIndex = 3
    Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0, 10)

    local gradient = Instance.new("UIGradient", tabButton)
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
    }
    gradient.Rotation = 90

    local label = Instance.new("TextLabel", tabButton)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 1)
    label.BackgroundTransparency = 1
    label.Text = name
    label.Font = Enum.Font.GothamBlack
    label.TextSize = 16
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.ZIndex = 4

    local labelGradient = Instance.new("UIGradient", label)
    labelGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
    }

    task.spawn(function()
        while label and labelGradient and labelGradient.Parent do
            for i = 0, 360, 2 do
                labelGradient.Rotation = i
                task.wait(0.02)
            end
        end
    end)

    local content = Instance.new("ScrollingFrame", self._mainFrame)
    content.Size = UDim2.new(1, -8, 1, -90)
    content.Position = UDim2.new(0, 4, 0, 81)
    content.BackgroundTransparency = 1
    content.BorderSizePixel = 0
    content.ScrollBarThickness = 0
    content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    content.CanvasSize = UDim2.new(0, 0, 0, 0)
    content.Visible = tabOrder == 1
    content.ZIndex = 1

    local padding = Instance.new("UIPadding", content)
    padding.PaddingLeft = UDim.new(0, 7)

    local layout = Instance.new("UIGridLayout", content)
    layout.CellSize = UDim2.new(0, 200, 0, 50)
    layout.CellPadding = UDim2.new(0, 29, 0, 10)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    tabContents[name] = {
        content = content,
        button = tabButton
    }

    if tabOrder == 1 then
        tabButton.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    end

    tabButton.MouseButton1Click:Connect(function()
        for _, data in pairs(tabContents) do
            data.content.Visible = false
            data.button.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
        end
        content.Visible = true
        tabButton.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    end)

    return content
end

function Carfrost:CreateButton(parent: Instance, labelText: string, onClick: () -> ())
    assert(parent, "Parent is nil in CreateButton")
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 200, 0, 50)
    btn.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    btn.BorderSizePixel = 0
    btn.TextTransparency = 1
    btn.AutoButtonColor = true
    btn.Active = true
    btn.ZIndex = 3
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)

    local bgGradient = Instance.new("UIGradient", btn)
    bgGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
    }
    bgGradient.Rotation = 90

    local label = Instance.new("TextLabel", btn)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 1)
    label.BackgroundTransparency = 1
    label.Text = labelText
    label.Font = Enum.Font.GothamBlack
    label.TextSize = 16
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.ZIndex = 4

    local labelGradient = Instance.new("UIGradient", label)
    labelGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
    }

    task.spawn(function()
        while label and labelGradient and labelGradient.Parent do
            for i = 0, 360, 2 do
                labelGradient.Rotation = i
                task.wait(0.02)
            end
        end
    end)

    btn.MouseButton1Click:Connect(onClick)
end

function Carfrost:CreateToggleButton(parent: Instance, labelText: string, onToggle: (boolean) -> ())
    local state = false

    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 200, 0, 50)
    btn.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    btn.BorderSizePixel = 0
    btn.TextTransparency = 1
    btn.AutoButtonColor = false
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)

    local bgGradient = Instance.new("UIGradient", btn)
    bgGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
    }
    bgGradient.Rotation = 90

    local label = Instance.new("TextLabel", btn)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = "[ OFF ]  " .. labelText
    label.Font = Enum.Font.GothamBlack
    label.TextSize = 16
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextXAlignment = Enum.TextXAlignment.Center

    local labelGradient = Instance.new("UIGradient", label)
    labelGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
    }

    task.spawn(function()
        while label and labelGradient and labelGradient.Parent do
            for i = 0, 360, 2 do
                labelGradient.Rotation = i
                task.wait(0.02)
            end
        end
    end)

    btn.MouseButton1Click:Connect(function()
        state = not state
        label.Text = (state and "[ ON ]  " or "[ OFF ]  ") .. labelText
        btn.BackgroundColor3 = state and Color3.fromRGB(0, 255, 127) or Color3.fromRGB(0, 170, 255)
        onToggle(state)
    end)
end

function Carfrost:CreateSlider(parent: Instance, labelText: string, minValue: number, maxValue: number, defaultValue: number, onChange: (number) -> ())
    local holder = Instance.new("Frame", parent)
    holder.Size = UDim2.new(0, 200, 0, 50)
    holder.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    holder.BorderSizePixel = 0
    Instance.new("UICorner", holder).CornerRadius = UDim.new(0, 10)

    local bgGradient = Instance.new("UIGradient", holder)
    bgGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
    }
    bgGradient.Rotation = 90

    local label = Instance.new("TextLabel", holder)
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = labelText .. ": " .. tostring(defaultValue)
    label.Font = Enum.Font.GothamBlack
    label.TextSize = 14
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextXAlignment = Enum.TextXAlignment.Center

    local labelGradient = Instance.new("UIGradient", label)
    labelGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
    }

    task.spawn(function()
        while label and labelGradient and labelGradient.Parent do
            for i = 0, 360, 2 do
                labelGradient.Rotation = i
                task.wait(0.02)
            end
        end
    end)

    local sliderBack = Instance.new("Frame", holder)
    sliderBack.Size = UDim2.new(0.9, 0, 0, 10)
    sliderBack.Position = UDim2.new(0.05, 0, 0, 30)
    sliderBack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sliderBack.BorderSizePixel = 0
    Instance.new("UICorner", sliderBack).CornerRadius = UDim.new(0, 6)

    local sliderFill = Instance.new("Frame", sliderBack)
    sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    sliderFill.BorderSizePixel = 0
    Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(0, 6)

    local fillGradient = Instance.new("UIGradient", sliderFill)
    fillGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
    }
    fillGradient.Rotation = 90

    local dragging = false

    sliderBack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            if Carfrost._mainFrame then
                Carfrost._mainFrame.Draggable = false
            end
        end
    end)

    sliderBack.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            if Carfrost._mainFrame then
                Carfrost._mainFrame.Draggable = true
            end
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relX = math.clamp(input.Position.X - sliderBack.AbsolutePosition.X, 0, sliderBack.AbsoluteSize.X)
            local ratio = relX / sliderBack.AbsoluteSize.X
            local value = math.floor((minValue + (maxValue - minValue) * ratio) + 0.5)
            sliderFill.Size = UDim2.new(ratio, 0, 1, 0)
            label.Text = labelText .. ": " .. tostring(value)
            onChange(value)
        end
    end)
end

return Carfrost
